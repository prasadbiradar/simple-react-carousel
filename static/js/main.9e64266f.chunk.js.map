{"version":3,"sources":["rampage.jpeg","2.jpeg","3.jpg","MovieCard.js","Carousel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MovieCard","react_default","a","createElement","className","src","this","props","url","alt","title","text","Component","Carousel","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentMovieSlide","totalSlides","width","handlePrev","bind","assertThisInitialized","handleNext","getVal","updateDimensions","window","addEventListener","w","innerWidth","setState","endOfList","index","console","log","require","currentMovie","secondMovie","thirdMovie","Carousel_Arrow","onClick","direction","src_MovieCard","Arrow","_ref","concat","App","src_Carousel","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e64266f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rampage.40fedafd.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/2.35f775f7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/3.239a5f9a.jpg\";","import React, { Component } from 'react';\n\nclass MovieCard extends Component {\n\n\n  \trender() {\n    \treturn (\n\t\t\t<div className=\"card\">\n\t        \t<div className=\"img-div\">\n\t          \t\t<img src={this.props.url} className=\"img\" alt={this.props.title} />\n\t          \t</div>\n\t          \t<div className=\"detail-div\">\n\t          \t\t<div className=\"txt-header\"> \n\t            \t\t{this.props.title}\n\t          \t\t</div>\n\t          \t\t<p className=\"txt\">\n\t            \t\t{this.props.text}\n\t            \t</p>\n\n\t            \t<div className=\"button-blue\">\n\t            \t\tBuy now\n\t            \t</div>\n\t            \t<div className=\"button-grey\">\n\t            \t\tPlay Trailer\n\t            \t</div>\n\t            </div>\n\t\t\t</div>\n\n\n    \t);\n  \t}\n}\n\nexport default MovieCard;","import React, { Component } from 'react';\nimport MovieCard from './MovieCard.js'\n\nclass Carousel extends Component {\n\n\tconstructor(props) {\n   \t\tsuper(props);\n\n   \t\tthis.state = {\n   \t\t\tcurrentMovieSlide : 1,\n   \t\t\ttotalSlides : 3,\n   \t\t\twidth: 1280\n   \t\t};\n\n   \t\tthis.handlePrev = this.handlePrev.bind(this);\n   \t\tthis.handleNext = this.handleNext.bind(this);\n   \t\tthis.getVal = this.getVal.bind(this);\n   \t\tthis.updateDimensions = this.updateDimensions.bind(this);\n\n\t}\n\n\tcomponentDidMount() {\n        window.addEventListener(\"resize\", this.updateDimensions);\n    }\n\n    updateDimensions(){\n    \tlet w = window.innerWidth;\n    \tthis.setState({ width: w });\n    }\n\n\thandlePrev(){\n\t\tconst endOfList = this.state.currentMovieSlide === 0;\n\t\tlet index = this.state.currentMovieSlide;\n\t\tindex = endOfList ? (this.state.totalSlides - 1) : (index - 1);\n\t\tthis.setState({\n\t\t\tcurrentMovieSlide : index\n\t\t});\n\t\tconsole.log(this.state.currentMovieSlide);\n\t}\n\n\thandleNext(){\n\t\tconst endOfList = this.state.currentMovieSlide === (this.state.totalSlides - 1);\n\t\tlet index = this.state.currentMovieSlide;\n\t\tindex = endOfList ? 0 : index + 1;\n\t\tthis.setState({\n\t\t\tcurrentMovieSlide : index\n\t\t});\n\t\tconsole.log(this.state.currentMovieSlide);\n\t}\n\n\tgetVal(index) {\n\t\tconst arr = [{\n  \t\t\ttitle: 'Rampage',\n  \t\t\turl: require(\"./rampage.jpeg\"),\n  \t\t\ttext: 'Filmmaker Carl Denham and his crew encounter a giant ape in Skull Island and imprison it to bring it to New York. However, they land in trouble when the giant ape goes rampant in the city.'\n\t\t},{\n\t\t\ttitle: 'Richard parker',\n\t\t\turl: require(\"./2.jpeg\"),\n  \t\t\ttext: 'Filmmaker Carl Denham and his crew encounter a giant ape in Skull Island and imprison it to bring it to New York. However, they land in trouble when the giant ape goes rampant in the city..'\n\t\t},{\n\t\t\ttitle: 'Beauty and Beast',\n\t\t\turl: require(\"./3.jpg\"),\n  \t\t\ttext: 'Filmmaker Carl Denham and his crew encounter a giant ape in Skull Island and imprison it to bring it to New York. However, they land in trouble when the giant ape goes rampant in the city.'\n\t\t}];\n\n\t\treturn arr[index ? index-1 : this.state.currentMovieSlide];\n\t}\n\n  \trender() {\n  \t\tconst currentMovie = this.getVal();\n\n  \t\t\n  \t\tlet endOfList = this.state.currentMovieSlide === (this.state.totalSlides - 1);\n\t\tlet index = this.state.currentMovieSlide;\n\t\tindex = endOfList ? 0 : index + 1;\n  \t\tconst secondMovie = this.getVal(index+1);\n\n\t\tendOfList = this.state.currentMovieSlide === 0;\n\t\tindex = this.state.currentMovieSlide;\n\t\tindex = endOfList ? (this.state.totalSlides - 1) : (index - 1);\n\t\tconst thirdMovie = this.getVal(index+1);\n\n\n  \t\t\n  \t\tif(this.state.width > 960){\n  \t\t\treturn(\n  \t\t\t    <div className=\"carousel\">\n    \t\t\t<div className=\"arrow\">\n\t    \t\t\t<Arrow onClick={ this.handlePrev } direction=\"left\"/>\n\t    \t\t</div>\n\t    \t\t<MovieCard {...currentMovie}/>\n\t    \t\t<div className=\"arrow\">\n\t    \t\t\t<Arrow onClick={ this.handleNext } direction=\"right\"/>\n\t    \t\t</div>\n\t    \t</div>\n\t    \t);\n  \t\t} else{\n\t    \treturn (\n\t    \t\t\t    \t\t<div>\n\t\t    \t\t<MovieCard {...currentMovie}/>\n\t\t    \t\t<MovieCard {...secondMovie}/>\n\t\t    \t\t<MovieCard {...thirdMovie}/>\n\t\t    \t</div>\n    \t);\n    \t}\n    }\n}\n\nexport default Carousel;\n\nconst Arrow = ({ onClick, direction }) => (\n\t<div \n\t\tclassName={ `${direction}-arrow` }\n\t\tonClick={ onClick }>\n\t</div>\n);","import React, { Component } from 'react';\nimport './App.css';\nimport Carousel from './Carousel.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Carousel/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}